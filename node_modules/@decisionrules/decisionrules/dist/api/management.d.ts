import { HostEnum, MngCategoryEnum } from "../defs/enums";
import { DecisionRulesOptions } from "../defs/models";
import { createHeaders } from "../utils/utils";
declare function getCategoryUrl(host: HostEnum | string, category: MngCategoryEnum, apiPath: string[], queryParams?: string[]): URL;
export declare function getRuleAPI(options: DecisionRulesOptions, ruleId: string, version?: string): Promise<any>;
export declare function updateRuleStatusAPI(options: DecisionRulesOptions, ruleId: string, status: string, version?: string): Promise<any>;
export declare function updateRuleAPI(options: DecisionRulesOptions, ruleId: string, data: any, version?: string): Promise<any>;
export declare function createRuleAPI(options: DecisionRulesOptions, data: any): Promise<any>;
export declare function deleteRuleAPI(options: DecisionRulesOptions, ruleId: string, version?: string): Promise<any>;
export declare function getRulesForSpaceAPI(options: DecisionRulesOptions): Promise<any>;
export declare function getTagsAPI(options: DecisionRulesOptions, tags: string[]): Promise<any>;
export declare function updateTagsAPI(options: DecisionRulesOptions, ruleId: string, tags: any, version?: string): Promise<any>;
export declare function deleteTagsAPI(options: DecisionRulesOptions, ruleId: string, tags: string[], version?: string): Promise<any>;
export declare function exportFolderAPI(options: DecisionRulesOptions, nodeId: string): Promise<any>;
export declare function importFolderAPI(options: DecisionRulesOptions, targetNodeId: string, data: any): Promise<any>;
export declare function findDuplicatesAPI(options: DecisionRulesOptions, ruleId: string, version?: string): Promise<any>;
export declare function findDependenciesAPI(options: DecisionRulesOptions, ruleId: string, version?: string): Promise<any>;
export declare function lockRuleAPI(options: DecisionRulesOptions, ruleId: string, data: any, version?: string): Promise<any>;
export declare const testManagementSet: {
    getCategoryUrl: typeof getCategoryUrl;
    createHeaders: typeof createHeaders;
};
export {};
